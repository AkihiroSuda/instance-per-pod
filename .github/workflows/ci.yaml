# from https://raw.githubusercontent.com/actions/starter-workflows/b8c1015cb2db0c619db7a99f29c5331930c16b25/ci/docker-push.yml

name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ipp

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - run: docker build .

  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  #
  # NOTICE: pulling images from GitHub Package Registry requires authentication, even for PUBLIC images!
  # https://github.community/t5/GitHub-Actions/docker-pull-from-public-GitHub-Package-Registry-fail-with-quot/td-p/32782
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v1

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build and push image
        run: |
          # repo name must be lowercase
          IMAGE_ID=$(echo docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME | tr A-Z a-z)

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker build -t $IMAGE_ID:$VERSION .
          docker push $IMAGE_ID:$VERSION
